var my3dPlot = document.getElementById("threeDplot");
var my3dPlot1 = document.getElementById("threeDplot1");
var myPlot1 = document.getElementById("linePlot");
let tableBody = document.getElementById("tableData");
let tableBody1 = document.getElementById("tableData1");
var z_clicked;
var x;
var z;
var z1;
var log_x;

Plotly.d3.csv("Phenobottle No.4 HL Run1.csv", function (rows) {
    x = [0.068, 0.088, 0.108, 0.132, 0.152, 0.172, 0.192, 0.216, 0.236, 0.256, 0.276, 0.3, 0.32, 0.34, 0.36, 0.384, 0.404, 0.424, 0.444, 0.468, 0.488, 0.508, 0.528, 0.552, 0.572, 0.592, 0.612, 0.636, 0.656, 0.676, 0.696, 0.72, 0.74, 0.76, 0.78, 0.804, 0.824, 0.844, 0.864, 0.888, 0.908, 0.928, 0.948, 0.972, 0.992, 1.012, 1.032, 1.056, 1.076, 1.096, 1.116, 1.14, 1.16, 1.18, 1.2, 1.224, 1.244, 1.264, 1.284, 1.308, 1.328, 1.348, 1.368, 1.392, 1.412, 1.432, 1.452, 1.476, 1.496, 1.516, 1.536, 1.56, 1.58, 1.6, 1.62, 1.644, 1.664, 1.684, 1.704, 1.728, 1.748, 1.768, 1.788, 1.812, 1.832, 1.852, 1.872, 1.896, 1.916, 1.936, 1.956, 1.98, 2.01, 2.02, 2.04, 2.064, 2.084, 2.104, 2.132, 2.152, 2.176, 2.196, 2.216, 2.236, 2.26, 2.28, 2.3, 2.32, 2.344, 2.364, 2.384, 2.404, 2.428, 2.448, 2.468, 2.488, 2.512, 2.532, 2.552, 2.572, 2.596, 2.616, 2.636, 2.656, 2.68, 2.7, 2.72, 2.74, 2.764, 2.784, 2.804, 2.824, 2.848, 2.868, 2.888, 2.908, 2.932, 2.952, 2.972, 2.992, 3.016, 3.036, 3.056, 3.076, 3.1, 3.12, 3.14, 3.16, 3.184, 3.204, 3.224, 3.244, 3.268, 3.288, 3.308, 3.328, 3.352, 3.372, 3.392, 3.412, 3.436, 3.456, 3.476, 3.496, 3.52, 3.54, 3.56, 3.58, 3.604, 3.624, 3.644, 3.664, 3.688, 3.708, 3.728, 3.748, 3.772, 3.792, 3.812, 3.832, 3.856, 3.876, 3.896, 3.916, 3.94, 3.96, 3.98, 4.01, 4.024, 4.044, 4.064, 4.084, 4.108, 4.128, 4.148, 4.168, 4.192, 4.212, 4.232, 5.264, 6.296, 7.324, 8.352, 9.384, 10.416, 11.444, 12.472, 13.504, 14.536, 15.564, 16.592, 17.624, 18.656, 19.684, 20.712, 21.744, 22.776, 23.804, 24.832, 25.864, 26.896, 27.924, 28.952, 29.984, 31.016, 32.044, 33.072, 34.104, 35.136, 36.164, 37.192, 38.224, 39.256, 40.284, 41.312, 42.344, 43.376, 44.404, 45.432, 46.464, 47.496, 48.524, 49.552, 50.584, 51.616, 52.644, 53.672, 54.704, 55.736, 56.764, 57.792, 58.824, 59.856, 60.888, 61.916, 62.948, 63.98, 65.008, 66.036, 67.068, 68.1, 69.128, 70.156, 71.188, 72.22, 73.248, 74.276, 75.308, 76.34, 77.368, 78.396, 79.428, 80.46, 81.488, 82.516, 83.548, 84.58, 85.608, 86.636, 87.668, 88.7, 89.728, 90.756, 91.788, 92.82, 93.848, 94.876, 95.908, 96.94, 97.968, 98.996, 100.028, 101.06, 102.088, 103.116, 104.148, 105.18, 106.208, 107.236, 108.268, 109.3, 110.328, 111.356, 112.388, 113.42, 114.448, 115.476, 116.508, 117.54, 118.568, 119.596, 120.628, 121.66, 122.688, 123.716, 124.748, 125.78, 126.808, 127.836, 128.868, 129.9, 130.928, 131.956, 132.988, 134.02, 135.048, 136.076, 137.108, 138.14, 139.168, 140.196, 141.228, 142.26, 143.288, 144.316, 145.348, 146.38, 147.408, 148.436, 149.468, 150.5, 151.532, 152.56, 153.592, 154.624, 155.652, 156.68, 157.712, 158.744, 159.772, 160.8, 161.832, 162.864, 163.892, 164.92, 165.956, 166.996, 168.028, 169.056, 170.088, 171.12, 172.148, 173.176, 174.208, 175.24, 176.268, 177.296, 178.328, 179.36, 180.388, 181.416, 182.448, 183.48, 184.508, 185.536, 186.568, 187.6, 188.628, 189.656, 190.688, 191.72, 192.748, 193.776, 194.808, 195.84, 196.868, 197.896, 198.928, 199.96, 200.988, 202.016, 203.048, 204.08, 205.108, 206.136, 207.168, 208.2, 209.228, 210.256, 211.288, 212.32, 213.348, 214.376, 215.408, 216.44, 217.468, 218.496, 219.528, 220.56, 221.588, 222.616, 223.648, 224.68, 225.708, 226.736, 227.768, 228.8, 229.828, 230.856, 231.888, 232.92, 233.948, 234.976, 236.008, 237.04, 238.068, 239.096, 240.128, 241.16, 242.188, 243.216, 244.248, 245.28, 246.308, 247.336, 248.368, 249.4, 250.428, 251.456, 252.488, 253.52, 254.548, 255.576, 256.608, 257.64, 258.668, 259.696, 260.728, 261.76, 262.788, 263.816, 264.848, 265.88, 266.908, 267.936, 268.968, 270.02, 271.028, 272.056, 273.088, 274.12, 275.148, 276.176, 277.208, 278.24, 279.272, 280.3, 281.332, 282.364, 283.392, 284.42, 285.452, 286.484, 287.512, 288.54, 289.572, 290.604, 291.632, 292.66, 293.692, 294.724, 295.752, 296.78, 297.812, 298.844, 299.872, 300.9, 301.932, 302.964, 303.992, 305.02, 306.052, 307.084, 308.112, 309.14, 310.172, 311.204, 312.232, 313.26, 314.292, 315.324, 316.352, 317.38, 318.412, 319.444, 320.472, 321.5, 322.532, 323.564, 324.592, 325.62, 326.652, 327.684, 328.712, 329.74, 330.772, 331.804, 332.832, 333.86, 334.892, 335.924, 336.952, 337.988, 339.02, 340.052, 341.084, 342.116, 343.144, 344.172, 345.204, 346.236, 347.264, 348.292, 349.324, 350.356, 351.384, 352.412, 353.444, 354.476, 355.504, 356.532, 357.564, 358.596, 359.624, 360.652, 361.684, 362.716, 363.744, 364.772, 365.804, 366.836, 367.864, 368.892, 369.924, 370.956, 371.984, 373.012, 374.044, 375.076, 376.104, 377.132, 378.164, 379.196, 380.224, 381.252, 382.284, 383.316, 384.344, 385.372, 386.404, 387.436, 388.464, 389.492, 390.524, 391.556, 392.584, 393.612, 394.644, 395.676, 396.704, 397.732, 398.764, 399.796, 400.824, 401.852, 402.884, 403.916, 404.944, 405.972, 407.004, 408.036, 409.064, 410.092, 411.124, 412.156, 413.184, 414.212, 415.244, 416.276, 417.304, 418.332, 419.364, 420.396, 421.424, 422.452, 423.484, 424.516, 425.544, 426.572, 427.604, 428.636, 429.664, 430.692, 431.724, 432.756, 433.784, 434.812, 435.844, 436.876, 437.904, 438.932, 439.964, 440.996, 442.024, 443.052, 444.084, 445.116, 446.144, 447.172, 448.204, 449.236, 450.264, 451.292, 452.324, 453.356, 454.384, 455.412, 456.444, 457.476, 458.504, 459.532, 460.564, 461.596, 462.624, 463.652, 464.684, 465.716, 466.744, 467.772, 468.804, 469.836, 470.864, 471.892, 472.924, 473.956, 474.984, 476.012, 477.044, 478.076, 479.104, 480.132, 481.164, 482.196, 483.224, 484.252, 485.284, 486.316, 487.344, 488.372, 489.404, 490.436, 491.464, 492.492, 493.524, 494.556, 495.584, 496.612, 497.644, 498.676, 499.704, 500.732, 501.764, 502.796, 503.824, 504.852, 505.884, 506.916, 507.944, 508.972, 510.004, 511.04, 512.072, 513.104, 514.14, 515.172, 516.2, 517.228, 518.26, 519.292, 520.32, 521.348, 522.38, 523.412, 524.44, 525.468, 526.5, 527.532, 528.56, 529.588, 530.62, 531.652, 532.68, 533.708, 534.74, 535.772, 536.804, 537.832, 538.864, 539.896, 540.924, 541.952, 542.984, 544.016, 545.044, 546.072, 547.104, 548.136, 549.164, 550.192, 551.224, 552.256, 553.284, 554.312, 555.344, 556.376, 557.404, 558.432, 559.464, 560.496, 561.524, 562.552, 563.584, 564.616, 565.644, 566.672, 567.704, 568.736, 569.764, 570.792, 571.824, 572.856, 573.884, 574.912, 575.944, 576.976, 578.004, 579.032, 580.064, 581.096, 582.124, 583.152, 584.184, 585.216, 586.244, 587.272, 588.304, 589.336, 590.364, 591.392, 592.424, 593.456, 594.484, 595.512, 596.544, 597.576, 598.604, 599.632, 600.664, 601.696, 602.724, 603.752, 604.784, 605.816, 606.844, 607.872, 608.904, 609.936, 610.964, 611.992, 613.024, 614.056, 615.084, 616.112, 617.144, 618.176, 619.204, 620.232, 621.264, 622.296, 623.324, 624.352, 625.384, 626.416, 627.444, 628.472, 629.504, 630.536, 631.564, 632.592, 633.624, 634.656, 635.684, 636.712, 637.744, 638.776, 639.804, 640.832, 641.864, 642.896, 643.924, 644.952, 645.984, 647.016, 648.044, 649.072, 650.104, 651.136, 652.164, 653.192, 654.224, 655.256, 656.284, 657.312, 658.344, 659.376, 660.404, 661.432, 662.464, 663.496, 664.524, 665.552, 666.584, 667.616, 668.648, 669.676, 670.708, 671.74, 672.768, 673.796, 674.828, 675.86, 676.888, 677.916, 678.948, 679.98, 681.008, 682.036, 683.076, 684.104, 685.14, 686.168, 687.2, 688.232, 689.264, 690.292, 691.324, 692.356, 693.384, 694.412, 695.444, 696.476, 697.504, 698.532, 699.564, 700.596, 701.624, 702.652, 703.684, 704.716, 705.744, 706.772, 707.804, 708.836, 709.864, 710.892, 711.924, 712.956, 713.984, 715.012, 716.044, 717.076, 718.104, 719.132, 720.164, 721.196, 722.224, 723.252, 724.284, 725.316, 726.344, 727.372, 728.404, 729.436, 730.464, 731.492, 732.524, 733.556, 734.584, 735.612, 736.644, 737.676, 738.704, 739.732, 740.764, 741.796, 742.824, 743.852, 744.884, 745.916, 746.944, 747.972, 749.004, 750.036, 751.064, 752.092, 753.124, 754.156, 755.184, 756.212, 757.244, 758.276, 759.304, 760.332, 761.364, 762.396, 763.424, 764.452, 765.484, 766.516, 767.544, 768.572, 769.604, 770.636, 771.664, 772.692, 773.724, 774.756, 775.784, 776.812, 777.844, 778.876, 779.904, 780.932, 781.964, 782.996, 784.024, 785.052, 786.084, 787.116, 788.144, 789.172, 790.204, 791.236, 792.264, 793.292, 794.324, 795.356, 796.388, 797.416, 798.448, 799.48, 800.508, 801.536, 802.568, 803.6, 804.628, 805.656, 806.688, 807.72, 808.748, 809.776, 810.808, 811.84, 812.868, 813.896, 814.928, 815.96, 816.988, 818.016, 819.048, 820.08, 821.108, 822.136, 823.168, 824.2, 825.228, 826.256, 827.288, 828.32, 829.348, 830.376, 831.408, 832.44, 833.468, 834.496, 835.528, 836.56, 837.588, 838.616, 839.648, 840.68, 841.708, 842.736, 843.768, 844.8, 845.828, 846.856, 847.888, 848.92, 849.948, 850.976, 852.008, 853.04, 854.068, 855.096, 856.132, 857.172, 858.204, 859.232, 860.264, 861.296, 862.324, 863.352, 864.384, 865.416, 866.444, 867.472, 868.504, 869.536, 870.564, 871.592, 872.624, 873.656, 874.684, 875.712, 876.744, 877.776, 878.804, 879.832, 880.864, 881.896, 882.928, 883.956, 884.988, 886.02, 887.048, 888.076, 889.108, 890.14, 891.168, 892.196, 893.228, 894.26, 895.288, 896.316, 897.348, 898.38, 899.408, 900.436, 901.468, 902.5, 903.528, 904.556, 905.588, 906.62, 907.648, 908.676, 909.708, 910.74, 911.768, 912.796, 913.828, 914.86, 915.888, 916.916, 917.948, 918.98, 920.008, 921.036, 922.068, 923.1, 924.128, 925.156, 926.188, 927.22, 928.248, 929.276, 930.308];
    log_x = [];
    for (var v in x) {
        log_x.push(Math.log10(x[v]));
    }

    z = [];
    for (var i in rows) {
        z.push(Object.values(rows[i]));
    }

    var data = [{
        x: log_x,
        z: z.slice(1, 550),
        type: "surface",
        colorscale: "Portland",
    }];

    var layout = {
        xaxis: {
            type: "log",
            title: {
                text: "Log10(Time (ms))",
            }
        },
        yaxis: {
            title: {
                text: "Minutes x 10",
            }
        },
        zaxis: {
            title: {
                text: "Vt",
            }
        },
        width: 600,
        height: 600,
        hovermode: 'closest',
        plot_bgcolor:"rgb(179,179,179)",
        paper_bgcolor:"rgb(179,179,179)",
        margin: {
            l: 20,
            r: 20,
            b: 20,
            t: 20,
            pad: 0
          },
    };
    Plotly.newPlot("threeDplot", data, layout);

    {
        points: [{
            curveNumber: 2,
            pointNumber: 2,
            x: 5,
            y: 600,
            z: 12,
        }]
    }

    my3dPlot.on('plotly_click', function (data) {
        z_clicked = data.points[0].pointNumber[1];
        plotOJIP();
        tabulateData();
        tabulateData1();
    });
});

Plotly.d3.csv("Phenobottle No.3 HL Run1.csv", function(rows1){
    z1 = [];
    for (var i in rows1) {
        z1.push(Object.values(rows1[i]));
    }

    var data1 = [{
        x: log_x,
        z: z1.slice(1, 550),
        type: "surface",
        colorscale: "Portland",
    }];

    var layout1 = {
        xaxis: {
            type: "log",
            title: {
                text: "Log10(Time (ms))",
            }
        },
        yaxis: {
            title: {
                text: "Minutes x 10",
            }
        },
        zaxis: {
            title: {
                text: "Vt",
            }
        },
        width: 600,
        height: 600,
        hovermode: 'closest',
        plot_bgcolor:"rgb(179,179,179)",
        paper_bgcolor:"rgb(179,179,179)",
        margin: {
            l: 20,
            r: 20,
            b: 20,
            t: 20,
            pad: 0
          },
    };
    Plotly.newPlot("threeDplot1", data1, layout1);

    {
        points: [{
            curveNumber: 2,
            pointNumber: 2,
            x: 5,
            y: 600,
            z: 12,
        }]
    }

    my3dPlot1.on('plotly_click', function (data) {
        z_clicked = data.points[0].pointNumber[1];
        plotOJIP();
        tabulateData();
        tabulateData1();
    });
});

function plotOJIP() {
    var trace1 = {
        x: x,
        y: z[z_clicked],
        mode: "lines",
        name: "Rep1",
        line: {
            color: 'rgb(219, 64, 82)',
            width: 2
        },
    };

    var trace2 = {
        x: x,
        y: z1[z_clicked],
        mode: "lines",
        name: "Rep2",
        line: {
            color: 'rgb(50, 100, 200)',
            width: 2
        },
    };

    var layout1 = {
        xaxis: {
            type: "log",
            title: {
                text: "Time (ms)"
            }
        },
        yaxis: {
            title: {
                text: "Vt"
            }
        },
        width: 600,
        height: 600,
        title: "OJIP of Interest",
        plot_bgcolor:"rgb(179,179,179)",
        paper_bgcolor:"rgb(179,179,179)",
    };

    var data_ojip = [ trace1, trace2 ];

    Plotly.newPlot("linePlot", data_ojip, layout1);
}

function initaliseOJIP() {
    var layout1 = {
        xaxis: {
            type: "log",
            title: {
                text: "Time (ms)"
            }
        },
        yaxis: {
            title: {
                text: "Vt"
            }
        },
        width: 600,
        height: 600,
        title: "OJIP of Interest",
        plot_bgcolor:"rgb(179,179,179)",
        paper_bgcolor:"rgb(179,179,179)",
    };
    var trace1 = [{
        x: [1, 2, 3, 4],
        y: [10, 15, 13, 17],
        mode: 'lines',
        line: {
            color: 'rgb(219, 64, 82)',
            width: 2
        },
    }];

    Plotly.newPlot('linePlot', trace1, layout1);
}

function tabulateData() {
    Plotly.d3.csv("Phenobottle No.4 HL Run1_values.csv", function table(rows) {
        var table_length = tableBody.rows.length;
        let newRow = tableBody.insertRow(table_length);
        for (var i = 0; i < 10; i++) {
            newRow.insertCell(i);
        }

        tableBody.rows[table_length].cells[0].innerHTML = `${rows[z_clicked].time_now}`;
        tableBody.rows[table_length].cells[1].innerHTML = `${rows[z_clicked].day_night}`;
        tableBody.rows[table_length].cells[2].innerHTML = `${rows[z_clicked].optical_density}`;
        tableBody.rows[table_length].cells[3].innerHTML = `${Math.round(rows[z_clicked].fo * 100) / 100}`;
        tableBody.rows[table_length].cells[4].innerHTML = `${Math.round(rows[z_clicked].fj * 100) / 100}`;
        tableBody.rows[table_length].cells[5].innerHTML = `${Math.round(rows[z_clicked].fi * 100) / 100}`;
        tableBody.rows[table_length].cells[6].innerHTML = `${Math.round(rows[z_clicked].fm * 100) / 100}`;
        tableBody.rows[table_length].cells[7].innerHTML = `${Math.round(rows[z_clicked].variable_fluorescence)}`;
        tableBody.rows[table_length].cells[8].innerHTML = `${rows[z_clicked].quantum_yield}`;
        tableBody.rows[table_length].cells[9].innerHTML = `${rows[z_clicked].vj}`;
    });
}

function tabulateData1() {
    Plotly.d3.csv("Phenobottle No.3 HL Run1_values.csv", function table(rows) {
        var table_length = tableBody1.rows.length;
        let newRow = tableBody1.insertRow(table_length);
        for (var i = 0; i < 10; i++) {
            newRow.insertCell(i);
        }

        tableBody1.rows[table_length].cells[0].innerHTML = `${rows[z_clicked].time_now}`;
        tableBody1.rows[table_length].cells[1].innerHTML = `${rows[z_clicked].day_night}`;
        tableBody1.rows[table_length].cells[2].innerHTML = `${rows[z_clicked].optical_density}`;
        tableBody1.rows[table_length].cells[3].innerHTML = `${Math.round(rows[z_clicked].fo * 100) / 100}`;
        tableBody1.rows[table_length].cells[4].innerHTML = `${Math.round(rows[z_clicked].fj * 100) / 100}`;
        tableBody1.rows[table_length].cells[5].innerHTML = `${Math.round(rows[z_clicked].fi * 100) / 100}`;
        tableBody1.rows[table_length].cells[6].innerHTML = `${Math.round(rows[z_clicked].fm * 100) / 100}`;
        tableBody1.rows[table_length].cells[7].innerHTML = `${Math.round(rows[z_clicked].variable_fluorescence)}`;
        tableBody1.rows[table_length].cells[8].innerHTML = `${rows[z_clicked].quantum_yield}`;
        tableBody1.rows[table_length].cells[9].innerHTML = `${rows[z_clicked].vj}`;
    });
}
